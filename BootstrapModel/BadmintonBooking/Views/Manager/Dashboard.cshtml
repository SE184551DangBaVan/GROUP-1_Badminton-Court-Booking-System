@model IEnumerable<BadmintonBooking.ViewModels.CourtDashboardViewModel>
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    
}
<link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/all.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Oswald:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Oswald', sans-serif;
    }

    body {
        min-height: 100vh;
    }

    a {
        text-decoration: none;
    }

    li {
        list-style: none;
    }

    h1, h2, h4 {
        color: #444;
    }

    h3 {
        color: #999;
    }

    .btn {
        background: #f05462;
        color: white;
        padding: 5px 10px;
        text-align: center;
        transition: background 0.2s ease, color 0.2s ease, outline 0.2s ease;
    }

    .btn:hover {
        color: #333;
        background: #ddd;
        text-shadow: none;
        outline: 1px solid #f05462;
        transition: background 0.3s ease, color 0.3s ease, outline 0.3s ease;
    }

    .title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 15px 10px;
    }

    table {
        width: 100%;
        padding: 10px;
        border-collapse: collapse;
    }

    th, td {
        text-align: center;
        padding: 8px;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        background: rgba(255,255,255,0.8);
        backdrop-filter: blur(5px);
    }

    .header {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 10vh;
        background: white;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        z-index: 1;
    }

        .header .nav {
            width: 90%;
            display: flex;
            justify-content: right;
        }

        .header .search {
            width: 50%;
            display: flex;
            justify-content: right;
            gap: 10px;
        }

        .header .search input[type=text] {
            border: none;
            background: #f1f1f1;
            padding: 10px;
            width: 80%;
            border-radius: 4px;
        }

    .header .search button {
        width: 40px;
        height: 40px;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f05462;
        color: white;
        border-radius: 4px;
        transition: background 0.2s ease, color 0.2s ease, border-radius 0.2s ease, outline 0.2s ease;
    }
    .header .search button:hover {
        background: brown;
        outline: 2px solid black;
        color: white;
        border-radius: 8px;
        cursor: pointer;
        transition: background 0.3s ease, color 0.3s ease, border-radius 0.3s ease;
    }

    .header .search button img {
        width: 20px;
        height: 20px;
    }

    .header .user {
        flex: 1;
        display: flex;
        justify-content: flex-end;
    }

    .content {
        margin-top: 10vh;
        padding: 20px;
    }

    .cards {
        display: flex;
        flex-direction: row;
        gap: 20px;
        justify-content: space-around;
        margin-bottom: 20px;
    }

    .card {
        width: calc(25%);
        height: 150px;
        background: white;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        border-radius: 4px;
    }

    .card .box {
        width: 65%;
    }

    .card .icon-case {
        position: relative;
        width: 90px;
        height: 90px;
        border-radius: 50%;
    }

    .card .icon-case svg {
        width: 100%;
        height: 100%;
    }

    .card .icon-case svg circle {
        transform: translate(8%,10%);
        fill: none;
        stroke: brown;
        stroke-width: 14;
        stroke-linecap: round;
        stroke-dasharray: 200;
        stroke-dashoffset: -30;
    }

    .card .icon-case .value {
        color: brown;
        position: absolute;
        top: 0; left: 0;
        height: 100%; width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .content .graph {
        width: 800px;
        height: 400px;
        padding: 10px;
        background: #ddd;
        border-radius: 12px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }

    canvas {
        width: 95% !important;
        height: 85% !important;
    }


    .date-filter {
        display: flex;
        justify-content: right;
    }

    .date-filter .d-flex {
        display: flex;
        gap: 10px;
    } 

    #dateFilterForm input[type="date"]{
        display: inline-block;
        background: #555;
        color: white;
        border-radius: 6px;
        padding: 0 0 0 10px;
        margin: 0 10px 0 0;
    }

    .content-2 {
        margin-top: 20px;
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .recent-payments {
        flex: 1;
        background: white;
        padding: 20px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        border-radius: 4px;
    }

</style>



<body>
    
    <div class="container">
        <div class="header">
             <div class="nav">
                <div class="search">
                    <input type="text" name="txtSearch" id="txtSearch" placeholder="Search..">
                    <button type="submit"><div><i class="fa-regular fa-magnifying-glass"></i></div></button>
                </div>
            </div> 
        </div>
        <div class="content">
            <div class="cards">
                  @* <div class="card">
                    <div class="box">
                        <h1>2194</h1>
                        <h3>Fixed</h3>
                    </div>
                    <div class="icon-case">
                        <svg>
                            <circle cx="38" cy="38" r="36"></circle>
                        </svg>
                    </div>
                </div>
                <div class="card">
                    <div class="box">
                        <h1>53</h1>
                        <h3>Flexible</h3>
                    </div>
                    <div class="icon-case">
                        <svg>
                            <circle cx="38" cy="38" r="36"></circle>
                        </svg>
                    </div>
                </div>
                <div class="card">
                    <div class="box">
                        <h1>5</h1>
                        <h3>Casual</h3>
                    </div>
                    <div class="icon-case">
                        <svg>
                            <circle cx="38" cy="38" r="36"></circle>
                        </svg>
                    </div>
                </div>  *@
                <div class="card">
                    <div class="box">
                        <h5><i class="fa-solid fa-chart-pie" style="color: #932C2C; text-align: center; margin: 5px;"></i>@ViewBag.TotalIncome.ToString("C")</h5>
                        <h4>Total Income</h4>
                    </div>
                    <div class="icon-case">
                        <svg>
                            <circle cx="38" cy="38" r="36"></circle>
                        </svg>
                        <div class="value" id="incomePercentage">100%</div>
                    </div>
                </div>
                <div class="graph">
                    <h4>Graph</h4>
                    <canvas id="incomeChart"></canvas>
                </div>
            </div>
                <div class="date-filter">
                    <div class="d-flex">
                        <form id="dateFilterForm" onsubmit="return validateDates()" asp-action="Dashboard" asp-controller="Manager" method="get">
                        

                            <label for="startDate">Start Date:</label>
                            <input type="date" id="startDate" name="startDate" value="@ViewBag.startDate" required />
                            <label for="endDate">End Date:</label>
                            <input type="date" id="endDate" name="endDate" value="@ViewBag.endDate" required />


                            <button type="submit" class="btn outline">Apply Date Filter</button>
                        </form>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Sort By
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="/Manager/Dashboard?page=1&startDate=@ViewBag.startDate&endDate=@ViewBag.endDate&sortOrder=income_asc">Income Ascending</a>
                                    <a class="dropdown-item" href="/Manager/Dashboard?page=1&startDate=@ViewBag.startDate&endDate=@ViewBag.endDate&sortOrder=income_desc">Income Descending</a>
                                    <a class="dropdown-item" href="/Manager/Dashboard?page=1&startDate=@ViewBag.startDate&endDate=@ViewBag.endDate&sortOrder=">Default</a>
                            </div>
                        </div>

                    </div>
                    @* <a class="" href="/Manager/Dashboard?page=1">All Time Income</a> *@
                    @if(ViewBag.startDate!=null&& ViewBag.endDate!=null)
                    {
                        <p><b>From @ViewBag.startDate?.ToString("d")        To            @ViewBag.endDate?.ToString("d")</b></p>
                    }
                    
                </div>
            
            @if(ViewBag.startDate==null&&ViewBag.endDate==null)
            {
                <div><h3><b>All time income</b></h3></div>
            }
           
            <div class="content-2" id="courtList">
                <div class="recent-payments">
                  
                    
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                <table>
                                    <thead>
                                        <tr>
                                            <th>No.</th>
                                            <th>Court Name</th>
                                            <th>Users Booked</th>
                                            <th>Total Amount</th>
                                           @*  <th>Option</th> *@
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@item.CoId</td>
                                                <td>@item.CoName</td>
                                                <td>@item.PeopleBooked</td>

                                                    @* <td><a href="#" class="btn">View</a></td> *@
                                            
                                                @if (item.TotalAmount>0)
                                                {
                                                    <td>@item.TotalAmount.ToString("C")</td>
                                                }else
                                                {
                                                    <td>No data</td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="no-data">
                                    <h3>No data available</h3>
                                </div>
                            }
                        </tbody>
                </div>
                
            </div>
        </div>
        @if (ViewBag.NoOfPages >= 1 || ViewBag.TotalRecords <= 5)
        {
            <ul class="pagination justify-content-center mt-4">
                @{
                    int PrevPage = ViewBag.Page - 1;
                    if (PrevPage <= 0) PrevPage = 1;
                    int NextPage = ViewBag.Page + 1;
                    if (NextPage > ViewBag.NoOfPages) NextPage = ViewBag.NoOfPages;
                }

                <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                    <a class="page-link" href="/Manager/Dashboard?page=@PrevPage&startDate=@ViewBag.startDate&endDate=@ViewBag.endDate&sortOrder=@ViewBag.sortOrder">Prev</a>
                </li>

                @for (int i = 1; i <= ViewBag.NoOfPages; i++)
                {
                    <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                        <a class="page-link" href="/Manager/Dashboard?page=@i&startDate=@ViewBag.startDate&endDate=@ViewBag.endDate&sortOrder=@ViewBag.sortOrder">@i</a>
                    </li>
                }

                <li class="page-item @(ViewBag.Page == ViewBag.NoOfPages ? "disabled" : "")">
                    <a class="page-link" href="/Manager/Dashboard?page=@NextPage&startDate=@ViewBag.startDate&endDate=@ViewBag.endDate&sortOrder=@ViewBag.sortOrder">Next</a>
                </li>
            </ul>
        }
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/script.js"></script>
       <script>
        $(document).ready(function () {
            $('#txtSearch').on('keyup', function () {
                var searchValue = $(this).val().toLowerCase();
                $('tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1)
                });
            });
        });
    </script> 
    <script>
        function validateDates() {
            var startDate = new Date(document.getElementById('startDate').value);
            var endDate = new Date(document.getElementById('endDate').value);

            if (endDate < startDate) {
                alert("End Date must be greater than or equal to Start Date.");
                return false; 
            }

            return true; 
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const totalIncomeElement = document.querySelector('#incomePercentage');
            const totalIncome = @ViewBag.TotalIncome;
            const goal = 100000000; // Goal amount
            const percentage = (totalIncome / goal) * 100;

            // Update value
            totalIncomeElement.textContent = percentage.toFixed(2) + '%';
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Sample data for demonstration purposes
            const monthlyIncome = [100000000, 200000000, 15000000, 250000000, 300000000, 500000000, 400000000, 60000000];
            const monthlyQuota = 500000000;
            const labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

            const ctx = document.getElementById('incomeChart').getContext('2d');
            const incomeChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Total Income',
                            data: monthlyIncome,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        },
                        {
                            label: 'Monthly Quota',
                            data: new Array(12).fill(monthlyQuota),
                            type: 'line',
                            fill: false,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 2,
                            pointRadius: 0
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
</body>