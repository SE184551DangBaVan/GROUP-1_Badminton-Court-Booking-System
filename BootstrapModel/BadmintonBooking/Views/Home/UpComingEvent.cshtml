@model IEnumerable<BadmintonBooking.Models.Booking>
@{
    ViewData["Title"] = "UpComingEvent";
    Layout = null;
}

<head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Righteous&display=swap">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap">
    <style>
        body {
            /* solid background */
            background: rgb(0,212,255);
            /* gradient background */
            background: linear-gradient(45deg, rgba(0,212,255,1) 0%, rgba(11,3,45,1) 100%);
            /* photo background */
            background-image: url(../images/desktop-wallpaper-badminton-shuttlecock-sport-equipment-shuttlecock.jpg);
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            margin: 0;
            padding: 0;
        }

        .events-wrapper {
            margin-top: 150px;
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(5px);
        }

        .event-container {
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.125);
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
            padding: 38px;
            filter: drop-shadow(0 30px 10px rgba(0,0,0,0.125));
            text-align: center;
            flex: 1 1 calc(33% - 40px); 
            box-sizing: border-box;
            margin-bottom: 20px;
        }

        .wrapper {
            width: 40%;
            height: 60%;
            backdrop-filter: blur(16px) saturate(180%);
            -webkit-backdrop-filter: blur(16px) saturate(180%);
            background-color: rgba(17, 25, 40, 0.25);
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.125);
        }

        .banner-image {
            height: 300px;
            width: 100%;
            border-radius: 12px;
            border: 1px solid rgba(255,255,255, 0.255);
            overflow: hidden;
        }

            .banner-image img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                object-position: center;
            }

        h1 {
            font-family: 'Righteous', sans-serif;
            color: rgba(255,255,255,0.98);
            text-transform: uppercase;
            font-size: 2.4rem;
        }

        p {
            color: #fff;
            font-family: 'Lato', sans-serif;
            text-align: center;
            font-size: 0.8rem;
            line-height: 150%;
            letter-spacing: 2px;
            text-transform: uppercase;
        }

        .button-wrapper {
            margin-top: 18px;
        }

        .btn {
            border: none;
            padding: 12px 24px;
            border-radius: 24px;
            font-size: 12px;
            font-size: 0.8rem;
            letter-spacing: 2px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
        }

            .btn + .btn {
                margin-left: 10px;
            }

        .outline {
            background: transparent;
            color: rgba(0, 212, 255, 0.9);
            border: 1px solid rgba(0, 212, 255, 0.6);
            transition: all .3s ease;
        }

            .outline:hover {
                transform: scale(1.125);
                color: rgba(255, 255, 255, 0.9);
                border-color: rgba(255, 255, 255, 0.9);
                transition: all .3s ease;
            }

        .fill {
            background: rgba(0, 212, 255, 0.9);
            color: rgba(255,255,255,0.95);
            filter: drop-shadow(0);
            font-weight: bold;
            transition: all .3s ease;
        }

            .fill:hover {
                transform: scale(1.125);
                border-color: rgba(255, 255, 255, 0.9);
                filter: drop-shadow(0 10px 5px rgba(0,0,0,0.125));
                transition: all .3s ease;
            }

        .timeslots-section {
            position: absolute;
            top: 0;
            right: -200px; /* Adjust based on desired width */
            width: 200px;
            height: 100%;
            background-color: #f0f0f0;
            transition: right 0.3s ease;
            overflow: hidden;
        }

        .card.show-timeslots .timeslots-section {
            right: 0;
        }

        .filter-buttons {
            z-index: 100;
            position: fixed;
            display: block;
            background-image: linear-gradient(to right bottom, #9ebbc4, #95a6b0, #8b929b, #7e7f84, #6e6e6e);
            padding: 5px 40px;
            /* margin-top: -200px; */
            top: 0; 
            left: 0; 
            text-align: center;
            width: 100%;
        }

        .filter-btn {
            margin-right: 10px;
        }


        .date-filter {
            position: fixed;
            top: 70px; /* Adjust based on the height of your filter buttons */
            left: 0;
            width: 100%;
            background-image: linear-gradient(to right bottom, #9ebbc4, #95a6b0, #8b929b, #7e7f84, #6e6e6e);
            padding: 10px;
            text-align: center;
            z-index: 99;
        }

            .date-filter form {
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 10px;
            }

            .date-filter label, .date-filter input, .date-filter button {
                font-family: 'Lato', sans-serif;
                font-size: 0.8rem;
            }

                .date-filter input[type="date"] {
                    padding: 5px;
                    border: 1px solid rgba(255, 255, 255, 0.125);
                    border-radius: 4px;
                    background-color: rgba(255, 255, 255, 0.1);
                    color: white;
                }

            .date-filter button {
                border: none;
                padding: 8px 16px;
                border-radius: 24px;
                cursor: pointer;
                background: rgba(0, 212, 255, 0.9);
                color: rgba(255,255,255,0.95);
                transition: all .3s ease;
            }

                .date-filter button:hover {
                    transform: scale(1.05);
                    background: rgba(255, 255, 255, 0.9);
                    color: rgba(0, 212, 255, 0.9);
                }
    </style>
</head>
<body>
    <div class="filter-buttons">
        <a asp-action="UpComingEvent" asp-route-userID="@ViewBag.userID" asp-route-filter="" class="btn @(ViewBag.CurrentFilter == null ? "fill" : "outline") filter-btn">All</a>
        <a asp-action="UpComingEvent" asp-route-userID="@ViewBag.userID" asp-route-filter="Fixed" class="btn @(ViewBag.CurrentFilter == "Fixed" ? "fill" : "outline") filter-btn">Fixed</a>
        <a asp-action="UpComingEvent" asp-route-userID="@ViewBag.userID" asp-route-filter="Flexible" class="btn @(ViewBag.CurrentFilter == "Flexible" ? "fill" : "outline") filter-btn">Flexible</a>
        <a asp-action="UpComingEvent" asp-route-userID="@ViewBag.userID" asp-route-filter="Casual" class="btn @(ViewBag.CurrentFilter == "Casual" ? "fill" : "outline") filter-btn">Casual</a>
        <a asp-action="Index" asp-controller="Home" class="btn outline back-btn">Back to Home</a>
    </div>
    <div class="date-filter">
        <form asp-action="UpComingEvent" method="get">
            <input type="hidden" name="userID" value="@ViewBag.UserID" />
            <input type="hidden" name="filter" value="@ViewBag.CurrentFilter" />

            <label for="startDate">Start Date:</label>
            <input type="date" id="startDate" name="startDate" value="@(ViewBag.StartDate?.ToString("yyyy-MM-dd"))" />

            <label for="endDate">End Date:</label>
            <input type="date" id="endDate" name="endDate" value="@(ViewBag.EndDate?.ToString("yyyy-MM-dd"))" />

            <button type="submit" class="btn outline">Apply Date Filter</button>
        </form>
    </div>

    @if (Model == null || !Model.Any())
    {
        string currentFilter = ViewBag.CurrentFilter ?? "";
        <h1>You haven't booked a court to see Upcoming Events @currentFilter timeslots now</h1>
    }
    else
    {
        <div class="events-wrapper">
            <h1>Upcoming Events</h1>
            @foreach (var item in Model)
            {
                <div class="event-container">
                    @foreach (var ts in item.TimeSlots)
                    {
                    
                    <div class="wrapper">
                            <div class="banner-image"><img src="/Upload/Image/@item.Co.CoPath" class="img-fluid" alt="@item.Co.CoName"></div>
                            <p>Court Name : @Html.DisplayFor(modelItem => item.Co.CoName)</p>
                            <p>Address : @Html.DisplayFor(modelItem => item.Co.CoAddress)</p>
                            <p>Date : @Html.DisplayFor(modelItem => ts.TsDate)</p>
                            <p>Start Time : @Html.DisplayFor(modelItem => ts.TsStart)</p>
                            <p>End Time : @Html.DisplayFor(modelItem => ts.TsEnd)</p>
                            <p>Type of Timeslot : @Html.DisplayFor(modelItem => item.BBookingType)</p>
                    
                    </div>
                    }
                </div>
            }
        </div>
    }
    <script>
        document.getElementById('startDate').addEventListener('change', function () {
            document.getElementById('endDate').min = this.value;
        });

        document.getElementById('endDate').addEventListener('change', function () {
            document.getElementById('startDate').max = this.value;
        });
    </script>
</body>